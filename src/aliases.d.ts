
// This file is auto-generated by `studio sync`.
// Do not edit this file directly.

declare module "@/components/ui/accordion" {
  export const Accordion: React.ForwardRefExoticComponent<
    Omit<
      AccordionPrimitive.AccordionProps,
      "ref"
    > &
      React.RefAttributes<HTMLDivElement>
  >
  export const AccordionItem: React.ForwardRefExoticComponent<
    AccordionPrimitive.AccordionItemProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const AccordionTrigger: React.ForwardRefExoticComponent<
    AccordionPrimitive.AccordionTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const AccordionContent: React.ForwardRefExoticComponent<
    AccordionPrimitive.AccordionContentProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/alert" {
  export const Alert: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      VariantProps<typeof alertVariants> &
      React.RefAttributes<HTMLDivElement>
  >
  export const AlertTitle: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLHeadingElement> &
      React.RefAttributes<HTMLParagraphElement>
  >
  export const AlertDescription: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLParagraphElement> &
      React.RefAttributes<HTMLParagraphElement>
  >
}
declare module "@/components/ui/alert-dialog" {
  export const AlertDialog: React.FC<AlertDialogPrimitive.AlertDialogProps>
  export const AlertDialogTrigger: React.ForwardRefExoticComponent<
    AlertDialogPrimitive.AlertDialogTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const AlertDialogPortal: React.FC<
    AlertDialogPrimitive.AlertDialogPortalProps
  >
  export const AlertDialogOverlay: React.ForwardRefExoticComponent<
    AlertDialogPrimitive.AlertDialogOverlayProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const AlertDialogContent: React.ForwardRefExoticComponent<
    AlertDialogPrimitive.AlertDialogContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const AlertDialogHeader: {
    (
      props: React.HTMLAttributes<HTMLDivElement>
    ): React.JSX.Element
    displayName: string
  }
  export const AlertDialogFooter: {
    (
      props: React.HTMLAttributes<HTMLDivElement>
    ): React.JSX.Element
    displayName: string
  }
  export const AlertDialogTitle: React.ForwardRefExoticComponent<
    AlertDialogPrimitive.AlertDialogTitleProps &
      React.RefAttributes<HTMLHeadingElement>
  >
  export const AlertDialogDescription: React.ForwardRefExoticComponent<
    AlertDialogPrimitive.AlertDialogDescriptionProps &
      React.RefAttributes<HTMLParagraphElement>
  >
  export const AlertDialogAction: React.ForwardRefExoticComponent<
    AlertDialogPrimitive.AlertDialogActionProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const AlertDialogCancel: React.ForwardRefExoticComponent<
    AlertDialogPrimitive.AlertDialogCancelProps &
      React.RefAttributes<HTMLButtonElement>
  >
}
declare module "@/components/ui/aspect-ratio" {
  export const AspectRatio: React.ForwardRefExoticComponent<
    AspectRatioPrimitive.AspectRatioProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/avatar" {
  export const Avatar: React.ForwardRefExoticComponent<
    AvatarPrimitive.AvatarProps &
      React.RefAttributes<HTMLSpanElement>
  >
  export const AvatarImage: React.ForwardRefExoticComponent<
    AvatarPrimitive.AvatarImageProps &
      React.RefAttributes<HTMLImageElement>
  >
  export const AvatarFallback: React.ForwardRefExoticComponent<
    AvatarPrimitive.AvatarFallbackProps &
      React.RefAttributes<HTMLSpanElement>
  >
}
declare module "@/components/ui/badge" {
  export function Badge(
    props: BadgeProps
  ): React.JSX.Element
  export const badgeVariants: (
    props?:
      | ({
          variant?:
            | "default"
            | "secondary"
            | "destructive"
            | "outline"
            | null
            | undefined
        } & ClassProp)
      | undefined
  ) => string
  export type BadgeProps =
    React.HTMLAttributes<HTMLDivElement> &
      VariantProps<typeof badgeVariants>
}
declare module "@/components/ui/button" {
  export const Button: React.ForwardRefExoticComponent<
    ButtonProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const buttonVariants: (
    props?:
      | ({
          variant?:
            | "default"
            | "destructive"
            | "outline"
            | "secondary"
            | "ghost"
            | "link"
            | null
            | undefined
          size?:
            | "default"
            | "sm"
            | "lg"
            | "icon"
            | null
            | undefined
        } & ClassProp)
      | undefined
  ) => string
  export type ButtonProps =
    React.ButtonHTMLAttributes<HTMLButtonElement> &
      VariantProps<typeof buttonVariants> & {
        asChild?: boolean
      }
}
declare module "@/components/ui/calendar" {
  export function Calendar({
    className,
    classNames,
    showOutsideDays,
    ...props
  }: CalendarProps): React.JSX.Element
  export type CalendarProps = React.ComponentProps<
    typeof DayPicker
  >
}
declare module "@/components/ui/card" {
  export const Card: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      React.RefAttributes<HTMLDivElement>
  >
  export const CardHeader: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      React.RefAttributes<HTMLDivElement>
  >
  export const CardFooter: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      React.RefAttributes<HTMLDivElement>
  >
  export const CardTitle: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      React.RefAttributes<HTMLDivElement>
  >
  export const CardDescription: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      React.RefAttributes<HTMLDivElement>
  >
  export const CardContent: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/carousel" {
  export function useCarousel(): {
    carouselRef: ReturnType<
      typeof useEmblaCarousel
    >[0]
    api: ReturnType<
      typeof useEmblaCarousel
    >[1]
    scrollPrev: () => void
    scrollNext: () => void
    canScrollPrev: boolean
    canScrollNext: boolean
    opts?: CarouselOptions | undefined
    plugins?: CarouselPlugin | undefined
    orientation?:
      | "horizontal"
      | "vertical"
      | undefined
    setApi?: ((api: CarouselApi) => void) | undefined
  }
  export const Carousel: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      CarouselProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const CarouselContent: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      React.RefAttributes<HTMLDivElement>
  >
  export const CarouselItem: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      React.RefAttributes<HTMLDivElement>
  >
  export const CarouselPrevious: React.ForwardRefExoticComponent<
    React.ComponentProps<typeof Button> &
      React.RefAttributes<HTMLButtonElement>
  >
  export const CarouselNext: React.ForwardRefExoticComponent<
    React.ComponentProps<typeof Button> &
      React.RefAttributes<HTMLButtonElement>
  >
  export type CarouselApi =
    UseEmblaCarouselType[1]
}
declare module "@/components/ui/chart" {
  export function useChart(): {
    config: ChartConfig
  }
  export const ChartContainer: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> & {
      config: ChartConfig
      children: React.ComponentProps<
        typeof RechartsPrimitive.ResponsiveContainer
      >["children"]
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const ChartStyle: {
    ({
      id,
      config,
    }: {
      id: string
      config: ChartConfig
    }): React.JSX.Element | null
  }
  export const ChartTooltip: React.ForwardRefExoticComponent<
    RechartsPrimitive.TooltipProps<
      ValueType,
      NameType
    > &
      React.RefAttributes<unknown>
  >
  export const ChartTooltipContent: React.ForwardRefExoticComponent<
    React.ComponentProps<
      typeof RechartsPrimitive.Tooltip
    > &
      React.ComponentProps<"div"> & {
        hideLabel?: boolean
        hideIndicator?: boolean
        indicator?: "line" | "dot" | "dashed"
        nameKey?: string
        labelKey?: string
      } &
      React.RefAttributes<HTMLDivElement>
  >
  export const ChartLegend: React.ForwardRefExoticComponent<
    RechartsPrimitive.LegendProps &
      React.RefAttributes<unknown>
  >
  export const ChartLegendContent: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> &
      Pick<
        RechartsPrimitive.LegendProps,
        "payload" | "verticalAlign"
      > & {
        hideIcon?: boolean
        nameKey?: string
      } &
      React.RefAttributes<HTMLDivElement>
  >
  export type ChartConfig = {
    [k: string]: {
      label?: React.ReactNode
      icon?: React.ComponentType
    } & (
      | {
          color?: string
          theme?: never
        }
      | {
          color?: never
          theme: Record<
            keyof typeof THEMES,
            string
          >
        }
    )
  }
}
declare module "@/components/ui/checkbox" {
  export const Checkbox: React.ForwardRefExoticComponent<
    CheckboxPrimitive.CheckboxProps &
      React.RefAttributes<HTMLButtonElement>
  >
}
declare module "@/components/ui/collapsible" {
  export const Collapsible: React.ForwardRefExoticComponent<
    CollapsiblePrimitive.CollapsibleProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const CollapsibleTrigger: React.ForwardRefExoticComponent<
    CollapsiblePrimitive.CollapsibleTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const CollapsibleContent: React.ForwardRefExoticComponent<
    CollapsiblePrimitive.CollapsibleContentProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/command" {
  export const Command: React.ForwardRefExoticComponent<
    CommandPrimitive.Props &
      React.RefAttributes<HTMLDivElement>
  >
  export const CommandDialog: React.FC<DialogProps>
  export const CommandInput: React.ForwardRefExoticComponent<
    Omit<
      CommandPrimitive.InputProps,
      "ref"
    > &
      React.RefAttributes<HTMLInputElement>
  >
  export const CommandList: React.ForwardRefExoticComponent<
    Omit<
      CommandPrimitive.ListProps,
      "ref"
    > &
      React.RefAttributes<HTMLDivElement>
  >
  export const CommandEmpty: React.ForwardRefExoticComponent<
    Omit<
      CommandPrimitive.EmptyProps,
      "ref"
    > &
      React.RefAttributes<HTMLDivElement>
  >
  export const CommandGroup: React.ForwardRefExoticComponent<
    Omit<
      CommandPrimitive.GroupProps,
      "ref"
    > &
      React.RefAttributes<HTMLDivElement>
  >
  export const CommandSeparator: React.ForwardRefExoticComponent<
    Omit<
      CommandPrimitive.SeparatorProps,
      "ref"
    > &
      React.RefAttributes<HTMLDivElement>
  >
  export const CommandItem: React.ForwardRefExoticComponent<
    Omit<
      CommandPrimitive.ItemProps,
      "ref"
    > &
      React.RefAttributes<HTMLDivElement>
  >
  export const CommandShortcut: {
    ({
      className,
      ...props
    }: React.HTMLAttributes<HTMLSpanElement>): React.JSX.Element
    displayName: string
  }
}
declare module "@/components/ui/context-menu" {
  export const ContextMenu: React.FC<
    ContextMenuPrimitive.ContextMenuProps
  >
  export const ContextMenuTrigger: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const ContextMenuPortal: React.FC<
    ContextMenuPrimitive.ContextMenuPortalProps
  >
  export const ContextMenuGroup: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuGroupProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuSub: React.FC<
    ContextMenuPrimitive.ContextMenuSubProps
  >
  export const ContextMenuRadioGroup: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuRadioGroupProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuSubTrigger: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuSubTriggerProps & {
      inset?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuSubContent: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuSubContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuContent: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuItem: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuItemProps & {
      inset?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuCheckboxItem: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuCheckboxItemProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuRadioItem: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuRadioItemProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuLabel: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuLabelProps & {
      inset?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuSeparator: React.ForwardRefExoticComponent<
    ContextMenuPrimitive.ContextMenuSeparatorProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const ContextMenuShortcut: {
    ({
      className,
      ...props
    }: React.HTMLAttributes<HTMLSpanElement>): React.JSX.Element
    displayName: string
  }
}
declare module "@/components/ui/dialog" {
  export const Dialog: React.FC<DialogPrimitive.DialogProps>
  export const DialogTrigger: React.ForwardRefExoticComponent<
    DialogPrimitive.DialogTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const DialogPortal: React.FC<DialogPrimitive.DialogPortalProps>
  export const DialogClose: React.ForwardRefExoticComponent<
    DialogPrimitive.DialogCloseProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const DialogOverlay: React.ForwardRefExoticComponent<
    DialogPrimitive.DialogOverlayProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DialogContent: React.ForwardRefExoticComponent<
    DialogPrimitive.DialogContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DialogHeader: {
    (
      props: React.HTMLAttributes<HTMLDivElement>
    ): React.JSX.Element
    displayName: string
  }
  export const DialogFooter: {
    (
      props: React.HTMLAttributes<HTMLDivElement>
    ): React.JSX.Element
    displayName: string
  }
  export const DialogTitle: React.ForwardRefExoticComponent<
    DialogPrimitive.DialogTitleProps &
      React.RefAttributes<HTMLHeadingElement>
  >
  export const DialogDescription: React.ForwardRefExoticComponent<
    DialogPrimitive.DialogDescriptionProps &
      React.RefAttributes<HTMLParagraphElement>
  >
}
declare module "@/components/ui/drawer" {
  export const Drawer: React.FC<
    DrawerPrimitive.DrawerProps
  >
  export const DrawerPortal: React.FC<
    DrawerPrimitive.DrawerPortalProps
  >
  export const DrawerOverlay: React.ForwardRefExoticComponent<
    DrawerPrimitive.DrawerOverlayProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DrawerTrigger: React.ForwardRefExoticComponent<
    DrawerPrimitive.DrawerTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const DrawerClose: React.ForwardRefExoticComponent<
    DrawerPrimitive.DrawerCloseProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const DrawerContent: React.ForwardRefExoticComponent<
    DrawerPrimitive.DrawerContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DrawerHeader: {
    (
      props: React.HTMLAttributes<HTMLDivElement>
    ): React.JSX.Element
    displayName: string
  }
  export const DrawerFooter: {
    (
      props: React.HTMLAttributes<HTMLDivElement>
    ): React.JSX.Element
    displayName: string
  }
  export const DrawerTitle: React.ForwardRefExoticComponent<
    DrawerPrimitive.DrawerTitleProps &
      React.RefAttributes<HTMLHeadingElement>
  >
  export const DrawerDescription: React.ForwardRefExoticComponent<
    DrawerPrimitive.DrawerDescriptionProps &
      React.RefAttributes<HTMLParagraphElement>
  >
}
declare module "@/components/ui/dropdown-menu" {
  export const DropdownMenu: React.FC<
    DropdownMenuPrimitive.DropdownMenuProps
  >
  export const DropdownMenuTrigger: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const DropdownMenuGroup: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuGroupProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuPortal: React.FC<
    DropdownMenuPrimitive.DropdownMenuPortalProps
  >
  export const DropdownMenuSub: React.FC<
    DropdownMenuPrimitive.DropdownMenuSubProps
  >
  export const DropdownMenuRadioGroup: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuRadioGroupProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuSubTrigger: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuSubTriggerProps & {
      inset?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuSubContent: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuSubContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuContent: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuItem: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuItemProps & {
      inset?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuCheckboxItem: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuCheckboxItemProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuRadioItem: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuRadioItemProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuLabel: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuLabelProps & {
      inset?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuSeparator: React.ForwardRefExoticComponent<
    DropdownMenuPrimitive.DropdownMenuSeparatorProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const DropdownMenuShortcut: {
    ({
      className,
      ...props
    }: React.HTMLAttributes<HTMLSpanElement>): React.JSX.Element
    displayName: string
  }
}
declare module "@/components/ui/form" {
  export function useFormField(): {
    invalid: boolean
    isDirty: boolean
    isTouched: boolean
    error?: FieldError | undefined
    id: string
    name:
      | (string & {})
      | "pickup"
      | "destination"
      | "packageSize"
    formItemId: string
    formDescriptionId: string
    formMessageId: string
  }
  export const Form: FormProvider<
    FieldValues
  >
  export const FormItem: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLDivElement> &
      React.RefAttributes<HTMLDivElement>
  >
  export const FormLabel: React.ForwardRefExoticComponent<
    React.ComponentPropsWithoutRef<
      typeof LabelPrimitive.Root
    > &
      React.RefAttributes<
        HTMLLabelElement
      >
  >
  export const FormControl: React.ForwardRefExoticComponent<
    React.ComponentPropsWithoutRef<
      typeof Slot
    > &
      React.RefAttributes<HTMLElement>
  >
  export const FormDescription: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLParagraphElement> &
      React.RefAttributes<HTMLParagraphElement>
  >
  export const FormMessage: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLParagraphElement> &
      React.RefAttributes<HTMLParagraphElement>
  >
  export const FormField: <
    TFieldValues extends FieldValues = FieldValues,
    TName extends FieldPath<
      TFieldValues
    > = FieldPath<TFieldValues>
  >({
    ...props
  }: ControllerProps<
    TFieldValues,
    TName
  >) => React.JSX.Element
}
declare module "@/components/ui/input" {
  export const Input: React.ForwardRefExoticComponent<
    React.ComponentProps<"input"> &
      React.RefAttributes<HTMLInputElement>
  >
}
declare module "@/components/ui/label" {
  export const Label: React.ForwardRefExoticComponent<
    React.ComponentPropsWithoutRef<
      typeof LabelPrimitive.Root
    > &
      VariantProps<typeof labelVariants> &
      React.RefAttributes<
        HTMLLabelElement
      >
  >
}
declare module "@/components/ui/menubar" {
  export function MenubarMenu(
    props: React.ComponentProps<
      typeof MenubarPrimitive.Menu
    >
  ): React.JSX.Element
  export function MenubarGroup(
    props: React.ComponentProps<
      typeof MenubarPrimitive.Group
    >
  ): React.JSX.Element
  export function MenubarPortal(
    props: React.ComponentProps<
      typeof MenubarPrimitive.Portal
    >
  ): React.JSX.Element
  export function MenubarRadioGroup(
    props: React.ComponentProps<
      typeof MenubarPrimitive.RadioGroup
    >
  ): React.JSX.Element
  export function MenubarSub(
    props: React.ComponentProps<
      typeof MenubarPrimitive.Sub
    >
  ): React.JSX.Element
  export const Menubar: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuBarProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const MenubarTrigger: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuBarTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const MenubarSubTrigger: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuBarSubTriggerProps & {
      inset?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const MenubarSubContent: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuBarSubContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const MenubarContent: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuBarContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const MenubarItem: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuItemProps & {
      inset?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const MenubarCheckboxItem: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuCheckboxItemProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const MenubarRadioItem: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuRadioItemProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const MenubarLabel: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuLabelProps & {
      inset?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const MenubarSeparator: React.ForwardRefExoticComponent<
    MenubarPrimitive.MenuSeparatorProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const MenubarShortcut: {
    ({
      className,
      ...props
    }: React.HTMLAttributes<HTMLSpanElement>): React.JSX.Element
    displayname: string
  }
}
declare module "@/components/ui/navigation-menu" {
  export const NavigationMenu: React.ForwardRefExoticComponent<
    NavigationMenuPrimitive.NavigationMenuProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const NavigationMenuList: React.ForwardRefExoticComponent<
    NavigationMenuPrimitive.NavigationMenuListProps &
      React.RefAttributes<HTMLUListElement>
  >
  export const NavigationMenuItem: React.ForwardRefExoticComponent<
    NavigationMenuPrimitive.NavigationMenuItemProps &
      React.RefAttributes<HTMLLIElement>
  >
  export const NavigationMenuContent: React.ForwardRefExoticComponent<
    NavigationMenuPrimitive.NavigationMenuContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const NavigationMenuTrigger: React.ForwardRefExoticComponent<
    NavigationMenuPrimitive.NavigationMenuTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const NavigationMenuLink: React.ForwardRefExoticComponent<
    NavigationMenuPrimitive.NavigationMenuLinkProps &
      React.RefAttributes<HTMLAnchorElement>
  >
  export const NavigationMenuIndicator: React.ForwardRefExoticComponent<
    NavigationMenuPrimitive.NavigationMenuIndicatorProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const NavigationMenuViewport: React.ForwardRefExoticComponent<
    NavigationMenuPrimitive.NavigationMenuViewportProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const navigationMenuTriggerStyle: (
    props?:
      | (ClassProp & {})
      | undefined
  ) => string
}
declare module "@/components/ui/pagination" {
  export function Pagination({
    className,
    ...props
  }: React.ComponentProps<"nav">): React.JSX.Element
  export function PaginationContent({
    className,
    ...props
  }: React.ComponentProps<"ul">): React.JSX.Element
  export function PaginationItem({
    className,
    ...props
  }: React.ComponentProps<"li">): React.JSX.Element
  export function PaginationLink({
    className,
    isActive,
    size,
    ...props
  }: PaginationLinkProps): React.JSX.Element
  export function PaginationPrevious({
    className,
    ...props
  }: React.ComponentProps<
    typeof PaginationLink
  >): React.JSX.Element
  export function PaginationNext({
    className,
    ...props
  }: React.ComponentProps<
    typeof PaginationLink
  >): React.JSX.Element
  export function PaginationEllipsis({
    className,
    ...props
  }: React.ComponentProps<"span">): React.JSX.Element
  export type PaginationLinkProps = {
    isActive?: boolean
  } & Pick<
    ButtonProps,
    "size"
  > &
    React.ComponentProps<"a">
}
declare module "@/components/ui/popover" {
  export const Popover: React.FC<PopoverPrimitive.PopoverProps>
  export const PopoverTrigger: React.ForwardRefExoticComponent<
    PopoverPrimitive.PopoverTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const PopoverContent: React.ForwardRefExoticComponent<
    PopoverPrimitive.PopoverContentProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/progress" {
  export const Progress: React.ForwardRefExoticComponent<
    ProgressPrimitive.ProgressProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/radio-group" {
  export const RadioGroup: React.ForwardRefExoticComponent<
    RadioGroupPrimitive.RadioGroupProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const RadioGroupItem: React.ForwardRefExoticComponent<
    RadioGroupPrimitive.RadioGroupItemProps &
      React.RefAttributes<HTMLButtonElement>
  >
}
declare module "@/components/ui/resizable" {
  export const ResizablePanelGroup: React.ForwardRefExoticComponent<
    PanelGroupProps &
      React.RefAttributes<ImperativePanelGroupHandle>
  >
  export const ResizablePanel: React.ForwardRefExoticComponent<
    PanelProps &
      React.RefAttributes<ImperativePanelHandle>
  >
  export const ResizableHandle: React.ForwardRefExoticComponent<
    PanelResizeHandleProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/scroll-area" {
  export const ScrollArea: React.ForwardRefExoticComponent<
    ScrollAreaPrimitive.ScrollAreaProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const ScrollBar: React.ForwardRefExoticComponent<
    ScrollAreaPrimitive.ScrollAreaScrollbarProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/select" {
  export const Select: React.FC<SelectPrimitive.SelectProps>
  export const SelectGroup: React.ForwardRefExoticComponent<
    SelectPrimitive.SelectGroupProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const SelectValue: React.ForwardRefExoticComponent<
    SelectPrimitive.SelectValueProps &
      React.RefAttributes<HTMLSpanElement>
  >
  export const SelectTrigger: React.ForwardRefExoticComponent<
    SelectPrimitive.SelectTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const SelectScrollUpButton: React.ForwardRefExoticComponent<
    SelectPrimitive.SelectScrollUpButtonProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const SelectScrollDownButton: React.ForwardRefExoticComponent<
    SelectPrimitive.SelectScrollDownButtonProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const SelectContent: React.ForwardRefExoticComponent<
    SelectPrimitive.SelectContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const SelectLabel: React.ForwardRefExoticComponent<
    SelectPrimitive.SelectLabelProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const SelectItem: React.ForwardRefExoticComponent<
    SelectPrimitive.SelectItemProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const SelectSeparator: React.ForwardRefExoticComponent<
    SelectPrimitive.SelectSeparatorProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/separator" {
  export const Separator: React.ForwardRefExoticComponent<
    SeparatorPrimitive.SeparatorProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/sheet" {
  export const Sheet: React.FC<SheetPrimitive.DialogProps>
  export const SheetTrigger: React.ForwardRefExoticComponent<
    SheetPrimitive.DialogTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const SheetClose: React.ForwardRefExoticComponent<
    SheetPrimitive.DialogCloseProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const SheetPortal: React.FC<SheetPrimitive.DialogPortalProps>
  export const SheetOverlay: React.ForwardRefExoticComponent<
    SheetPrimitive.DialogOverlayProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const SheetContent: React.ForwardRefExoticComponent<
    SheetContentProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const SheetHeader: {
    (
      props: React.HTMLAttributes<HTMLDivElement>
    ): React.JSX.Element
    displayName: string
  }
  export const SheetFooter: {
    (
      props: React.HTMLAttributes<HTMLDivElement>
    ): React.JSX.Element
    displayName: string
  }
  export const SheetTitle: React.ForwardRefExoticComponent<
    SheetPrimitive.DialogTitleProps &
      React.RefAttributes<HTMLHeadingElement>
  >
  export const SheetDescription: React.ForwardRefExoticComponent<
    SheetPrimitive.DialogDescriptionProps &
      React.RefAttributes<HTMLParagraphElement>
  >
  export type SheetContentProps =
    React.ComponentPropsWithoutRef<
      typeof SheetPrimitive.Content
    > &
      VariantProps<typeof sheetVariants>
}
declare module "@/components/ui/skeleton" {
  export function Skeleton({
    className,
    ...props
  }: React.HTMLAttributes<HTMLDivElement>): React.JSX.Element
}
declare module "@/components/ui/slider" {
  export const Slider: React.ForwardRefExoticComponent<
    SliderPrimitive.SliderProps &
      React.RefAttributes<HTMLSpanElement>
  >
}
declare module "@/components/ui/sonner" {
  export function Toaster({
    ...props
  }: React.ComponentProps<
    typeof Sonner
  >): React.JSX.Element
}
declare module "@/components/ui/switch" {
  export const Switch: React.ForwardRefExoticComponent<
    SwitchPrimitives.SwitchProps &
      React.RefAttributes<HTMLButtonElement>
  >
}
declare module "@/components/ui/table" {
  export const Table: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLTableElement> &
      React.RefAttributes<HTMLTableElement>
  >
  export const TableHeader: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLTableSectionElement> &
      React.RefAttributes<HTMLTableSectionElement>
  >
  export const TableBody: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLTableSectionElement> &
      React.RefAttributes<HTMLTableSectionElement>
  >
  export const TableFooter: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLTableSectionElement> &
      React.RefAttributes<HTMLTableSectionElement>
  >
  export const TableRow: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLTableRowElement> &
      React.RefAttributes<HTMLTableRowElement>
  >
  export const TableHead: React.ForwardRefExoticComponent<
    React.ThHTMLAttributes<HTMLTableCellElement> &
      React.RefAttributes<HTMLTableCellElement>
  >
  export const TableCell: React.ForwardRefExoticComponent<
    React.TdHTMLAttributes<HTMLTableCellElement> &
      React.RefAttributes<HTMLTableCellElement>
  >
  export const TableCaption: React.ForwardRefExoticComponent<
    React.HTMLAttributes<HTMLTableCaptionElement> &
      React.RefAttributes<HTMLTableCaptionElement>
  >
}
declare module "@/components/ui/tabs" {
  export const Tabs: React.ForwardRefExoticComponent<
    TabsPrimitive.TabsProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const TabsList: React.ForwardRefExoticComponent<
    TabsPrimitive.TabsListProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const TabsTrigger: React.ForwardRefExoticComponent<
    TabsPrimitive.TabsTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const TabsContent: React.ForwardRefExoticComponent<
    TabsPrimitive.TabsContentProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/textarea" {
  export const Textarea: React.ForwardRefExoticComponent<
    React.ComponentProps<"textarea"> &
      React.RefAttributes<HTMLTextAreaElement>
  >
}
declare module "@/components/ui/toast" {
  export const ToastProvider: React.FC<
    ToastPrimitives.ToastProviderProps
  >
  export const ToastViewport: React.ForwardRefExoticComponent<
    ToastPrimitives.ToastViewportProps &
      React.RefAttributes<HTMLOListElement>
  >
  export const Toast: React.ForwardRefExoticComponent<
    React.ComponentPropsWithoutRef<
      typeof ToastPrimitives.Root
    > &
      VariantProps<typeof toastVariants> &
      React.RefAttributes<HTMLLIElement>
  >
  export const ToastAction: React.ForwardRefExoticComponent<
    ToastPrimitives.ToastActionProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const ToastClose: React.ForwardRefExoticComponent<
    ToastPrimitives.ToastCloseProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const ToastTitle: React.ForwardRefExoticComponent<
    ToastPrimitives.ToastTitleProps &
      React.RefAttributes<HTMLDivElement>
  >
  export const ToastDescription: React.ForwardRefExoticComponent<
    ToastPrimitives.ToastDescriptionProps &
      React.RefAttributes<HTMLDivElement>
  >
  export type ToastProps =
    React.ComponentPropsWithoutRef<
      typeof Toast
    >
  export type ToastActionElement =
    React.ReactElement<
      typeof ToastAction
    >
}
declare module "@/components/ui/toaster" {
  export function Toaster(): React.JSX.Element
}
declare module "@/components/ui/toggle" {
  export const Toggle: React.ForwardRefExoticComponent<
    TogglePrimitive.ToggleProps &
      VariantProps<typeof toggleVariants> &
      React.RefAttributes<HTMLButtonElement>
  >
  export const toggleVariants: (
    props?:
      | ({
          variant?:
            | "default"
            | "outline"
            | null
            | undefined
          size?:
            | "default"
            | "sm"
            | "lg"
            | null
            | undefined
        } & ClassProp)
      | undefined
  ) => string
}
declare module "@/components/ui/toggle-group" {
  export const ToggleGroup: React.ForwardRefExoticComponent<
    ToggleGroupPrimitive.ToggleGroupProps &
      VariantProps<typeof toggleVariants> &
      React.RefAttributes<HTMLDivElement>
  >
  export const ToggleGroupItem: React.ForwardRefExoticComponent<
    ToggleGroupPrimitive.ToggleGroupItemProps &
      VariantProps<typeof toggleVariants> &
      React.RefAttributes<HTMLButtonElement>
  >
}
declare module "@/components/ui/tooltip" {
  export const TooltipProvider: React.FC<
    TooltipPrimitive.TooltipProviderProps
  >
  export const Tooltip: React.FC<TooltipPrimitive.TooltipProps>
  export const TooltipTrigger: React.ForwardRefExoticComponent<
    TooltipPrimitive.TooltipTriggerProps &
      React.RefAttributes<HTMLButtonElement>
  >
  export const TooltipContent: React.ForwardRefExoticComponent<
    TooltipPrimitive.TooltipContentProps &
      React.RefAttributes<HTMLDivElement>
  >
}
declare module "@/components/ui/sidebar" {
  export function useSidebar(): {
    state: "expanded" | "collapsed"
    open: boolean
    setOpen: (
      value: boolean | ((value: boolean) => boolean)
    ) => void
    openMobile: boolean
    setOpenMobile: (
      open: boolean
    ) => void
    isMobile: boolean
    toggleSidebar: () => void
  }
  export const SidebarProvider: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> & {
      defaultOpen?: boolean
      open?: boolean
      onOpenChange?: (open: boolean) => void
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const Sidebar: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> & {
      side?: "left" | "right"
      variant?: "sidebar" | "floating" | "inset"
      collapsible?: "offcanvas" | "icon" | "none"
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarTrigger: React.ForwardRefExoticComponent<
    React.ComponentProps<typeof Button> &
      React.RefAttributes<HTMLButtonElement>
  >
  export const SidebarRail: React.ForwardRefExoticComponent<
    React.ComponentProps<"button"> &
      React.RefAttributes<HTMLButtonElement>
  >
  export const SidebarInset: React.ForwardRefExoticComponent<
    React.ComponentProps<"main"> &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarInput: React.ForwardRefExoticComponent<
    React.ComponentProps<typeof Input> &
      React.RefAttributes<HTMLInputElement>
  >
  export const SidebarHeader: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarFooter: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarSeparator: React.ForwardRefExoticComponent<
    React.ComponentProps<typeof Separator> &
      React.RefAttributes<HTMLHRElement>
  >
  export const SidebarContent: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarGroup: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarGroupLabel: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> & {
      asChild?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarGroupAction: React.ForwardRefExoticComponent<
    React.ComponentProps<"button"> & {
      asChild?: boolean
    } &
      React.RefAttributes<HTMLButtonElement>
  >
  export const SidebarGroupContent: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarMenu: React.ForwardRefExoticComponent<
    React.ComponentProps<"ul"> &
      React.RefAttributes<HTMLUListElement>
  >
  export const SidebarMenuItem: React.ForwardRefExoticComponent<
    React.ComponentProps<"li"> &
      React.RefAttributes<HTMLLIElement>
  >
  export const SidebarMenuButton: React.ForwardRefExoticComponent<
    React.ComponentProps<"button"> & {
      asChild?: boolean
      isActive?: boolean
      tooltip?:
        | string
        | React.ComponentProps<
            typeof TooltipContent
          >
    } &
      VariantProps<
        typeof sidebarMenuButtonVariants
      > &
      React.RefAttributes<HTMLButtonElement>
  >
  export const SidebarMenuAction: React.ForwardRefExoticComponent<
    React.ComponentProps<"button"> & {
      asChild?: boolean
      showOnHover?: boolean
    } &
      React.RefAttributes<HTMLButtonElement>
  >
  export const SidebarMenuBadge: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarMenuSkeleton: React.ForwardRefExoticComponent<
    React.ComponentProps<"div"> & {
      showIcon?: boolean
    } &
      React.RefAttributes<HTMLDivElement>
  >
  export const SidebarMenuSub: React.ForwardRefExoticComponent<
    React.ComponentProps<"ul"> &
      React.RefAttributes<HTMLUListElement>
  >
  export const SidebarMenuSubItem: React.ForwardRefExoticComponent<
    React.ComponentProps<"li"> &
      React.RefAttributes<HTMLLIElement>
  >
  export const SidebarMenuSubButton: React.ForwardRefExoticComponent<
    React.ComponentProps<"a"> & {
      asChild?: boolean
      size?: "sm" | "md"
      isActive?: boolean
    } &
      React.RefAttributes<HTMLAnchorElement>
  >
}
declare module "@/lib/utils" {
  export function cn(
    ...inputs: ClassValue[]
  ): string
}
declare module "@/lib/shadcn" {
  export const shadcnPlugin:
    PluginCreator
  export const shadcnPreset: {
    darkMode: "class"
    content: never[]
    plugins: PluginCreator[]
  }
}
declare module "@/hooks/use-mobile" {
  export function useIsMobile(): boolean
}
declare module "@/hooks/use-toast" {
  export function reducer(
    state: State,
    action: Action
  ): State
  export function toast(
    props: Toast
  ): {
    id: string
    dismiss: () => void
    update: (
      props: ToasterToast
    ) => void
  }
  export function useToast(): {
    toast: typeof toast
    dismiss: (
      toastId?: string | undefined
    ) => void
    toasts: ToasterToast[]
  }
}
declare module "@/hooks/use-auth" {
  export const AuthProvider: ({
    children,
  }: {
    children: ReactNode
  }) => React.JSX.Element
  export const useAuth: () => AuthContextType
}
